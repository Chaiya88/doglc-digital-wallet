#!/usr/bin/env node

/**
 * Deployment script for Cloudflare Workers with enhanced configuration
 */

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô deployment ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö DOGLC Digital Wallet...\n');

// Check if wrangler is installed
try {
  execSync('wrangler --version', { stdio: 'ignore' });
  console.log('‚úÖ Wrangler CLI ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');
} catch (error) {
  console.log('‚ùå Wrangler ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á...');
  execSync('npm install -g wrangler', { stdio: 'inherit' });
}

// Check if .env file exists for local development
if (!fs.existsSync('.env') && !fs.existsSync('.dev.vars')) {
  console.log('‚ö†Ô∏è  ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå .env ‡∏´‡∏£‡∏∑‡∏≠ .dev.vars');
  console.log('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å .env.example ‡πÄ‡∏õ‡πá‡∏ô .env ‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô\n');
  
  // Create basic .env file from example
  if (fs.existsSync('.env.example')) {
    fs.copyFileSync('.env.example', '.env');
    console.log('üìÑ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå .env ‡∏à‡∏≤‡∏Å .env.example ‡πÅ‡∏•‡πâ‡∏ß');
    console.log('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå .env ‡∏Å‡πà‡∏≠‡∏ô deploy\n');
  }
}

// Validate wrangler.toml
if (!fs.existsSync('wrangler.toml')) {
  console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå wrangler.toml');
  process.exit(1);
}

// Function to deploy
function deploy(environment = 'staging') {
  try {
    console.log(`üì¶ ‡∏Å‡∏≥‡∏•‡∏±‡∏á deploy ‡πÑ‡∏õ‡∏¢‡∏±‡∏á ${environment}...`);
    console.log(`üìÇ Project: DOGLC Digital Wallet`);
    console.log(`üåê Multi-language Telegram Bot`);
    console.log(`‚öôÔ∏è  Environment: ${environment}\n`);
    
    // Pre-deployment checks
    console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏Å‡πà‡∏≠‡∏ô deploy...');
    
    const requiredFiles = [
      'src/index.js',
      'src/handlers/start.js',
      'src/handlers/wallet.js', 
      'src/handlers/help.js',
      'src/locales/th.js',
      'src/locales/en.js',
      'src/locales/index.js',
      'src/utils/helpers.js',
      'src/utils/config.js',
      'src/utils/ocr.js',
      'src/utils/gmail.js'
    ];
    
    const missingFiles = requiredFiles.filter(file => !fs.existsSync(file));
    
    if (missingFiles.length > 0) {
      console.log('‚ùå ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏≤‡∏¢‡πÑ‡∏õ:');
      missingFiles.forEach(file => console.log(`   - ${file}`));
      process.exit(1);
    }
    
    console.log('‚úÖ ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏û‡∏£‡πâ‡∏≠‡∏° (‡∏£‡∏ß‡∏° OCR ‡πÅ‡∏•‡∏∞ Gmail integration)\n');
    
    // Validate enhanced configuration
    console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö configuration ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö advanced features...');
    
    const wranglerConfig = fs.readFileSync('wrangler.toml', 'utf8');
    const requiredBindings = [
      'OCR_LOG_KV',
      'GMAIL_LOG_KV', 
      'SECURITY_EVENTS_KV',
      'SLIP_IMAGES_R2',
      'OCR_WORKER',
      'DEPOSIT_QUEUE'
    ];
    
    const missingBindings = requiredBindings.filter(binding => !wranglerConfig.includes(binding));
    
    if (missingBindings.length > 0) {
      console.log('‚ö†Ô∏è  Enhanced bindings ‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤:');
      missingBindings.forEach(binding => console.log(`   - ${binding}`));
      console.log('   (‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ deploy ‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà advanced features ‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô)\n');
    } else {
      console.log('‚úÖ Enhanced configuration ‡∏û‡∏£‡πâ‡∏≠‡∏°\n');
    }
    
    // Deploy command
    const deployCommand = environment === 'production' 
      ? 'wrangler deploy --env production'
      : 'wrangler deploy --env staging';
    
    console.log(`üîß Running: ${deployCommand}\n`);
    execSync(deployCommand, { stdio: 'inherit' });
    
    console.log(`\n‚úÖ Deploy ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!`);
    console.log(`üåê DOGLC Digital Wallet Bot ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß`);
    console.log(`üìä Features: Multi-language (6 ‡∏†‡∏≤‡∏©‡∏≤), OCR Slip Verification, Gmail Integration, Enhanced Security`);
    
    if (environment === 'production') {
      console.log(`\nüîß ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏ó‡∏≥‡∏ï‡πà‡∏≠:`)
      console.log(`1. ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Webhook URL ‡πÉ‡∏ô Telegram Bot via @BotFather`)
      console.log(`2. ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Environment Variables ‡πÉ‡∏ô Cloudflare Dashboard`)
      console.log(`3. ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö KV Namespaces, D1 Databases, ‡πÅ‡∏•‡∏∞ R2 Buckets`)
      console.log(`4. ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Google Vision API ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö OCR`)
      console.log(`5. ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Gmail API ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö banking integration`)
      console.log(`6. ‚úÖ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Bot ‡πÉ‡∏ô Telegram (@DoglcWallet_Bot)`)
      console.log(`7. ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Health Check: https://your-worker.workers.dev/health`)
      
      console.log(`\nüìã Environment Variables ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤:`)
      console.log(`   ‚Ä¢ TELEGRAM_BOT_TOKEN`)
      console.log(`   ‚Ä¢ JWT_SECRET`) 
      console.log(`   ‚Ä¢ ENCRYPTION_KEY`)
      console.log(`   ‚Ä¢ GOOGLE_VISION_API_KEY`)
      console.log(`   ‚Ä¢ GMAIL_CLIENT_ID & GMAIL_CLIENT_SECRET`)
      console.log(`   ‚Ä¢ CLOUDFLARE_ACCOUNT_ID`)
      console.log(`   ‚Ä¢ ‡πÅ‡∏•‡∏∞‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ï‡∏≤‡∏° .env.example`)
      
      console.log(`\nüè¶ Banking Features:`)
      console.log(`   ‚Ä¢ ‚úÖ Thai Banking Slip OCR Verification`)
      console.log(`   ‚Ä¢ ‚úÖ Gmail Auto-confirmation Integration`)
      console.log(`   ‚Ä¢ ‚úÖ THB/USDT Balance Management`)
      console.log(`   ‚Ä¢ ‚úÖ VIP System with Enhanced Limits`)
      console.log(`   ‚Ä¢ ‚úÖ Advanced Security & Fraud Detection`)
    } else {
      console.log(`\nüß™ Staging Environment:`)
      console.log(`   ‚Ä¢ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö OCR slip verification`)
      console.log(`   ‚Ä¢ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Gmail webhook integration`)
      console.log(`   ‚Ä¢ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö multi-language support (6 ‡∏†‡∏≤‡∏©‡∏≤)`)
      console.log(`   ‚Ä¢ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö enhanced security features`)
      console.log(`   ‚Ä¢ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö rate limiting ‡πÅ‡∏•‡∏∞ fraud detection`)
    }
    
  } catch (error) {
    console.error('\n‚ùå Deploy ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', error.message);
    console.log('\nüîß ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤:');
    console.log('1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö wrangler login status');
    console.log('2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö wrangler.toml configuration');
    console.log('3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Cloudflare account permissions');
    console.log('4. ‡∏î‡∏π error log ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î');
    process.exit(1);
  }
}

// Parse command line arguments
const args = process.argv.slice(2);
const environment = args.includes('--prod') || args.includes('--production') ? 'production' : 'staging';

// Show deployment info
console.log('üìã Deployment Information:');
console.log(`   Environment: ${environment}`);
console.log(`   Bot Features: 6 languages, OCR verification, Gmail integration`);
console.log(`   Security: Enhanced fraud detection, audit logging`);
console.log(`   Banking: Thai slip verification, auto-confirmation`);
console.log(`   Architecture: Multi-worker + D1 + KV + R2 + Queues`);
console.log('');

deploy(environment);